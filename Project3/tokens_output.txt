Token list:

Token type: IDENTIFIER
Token:      function

Token type: IDENTIFIER
Token:      int

Token type: IDENTIFIER
Token:      sum_of_first_n_squares

Token type: L_PAREN
Token:      (

Token type: IDENTIFIER
Token:      int

Token type: IDENTIFIER
Token:      n

Token type: R_PAREN
Token:      )

Token type: L_BRACE
Token:      {

Token type: IDENTIFIER
Token:      int

Token type: IDENTIFIER
Token:      sum

Token type: SEMICOLON
Token:      ;

Token type: IDENTIFIER
Token:      sum

Token type: ASSIGNMENT_OPERATOR
Token:      =

Token type: INTEGER
Token:      0

Token type: SEMICOLON
Token:      ;

Token type: IDENTIFIER
Token:      if

Token type: L_PAREN
Token:      (

Token type: IDENTIFIER
Token:      n

Token type: GT_EQUAL
Token:      >=

Token type: INTEGER
Token:      1

Token type: R_PAREN
Token:      )

Token type: L_BRACE
Token:      {

Token type: IDENTIFIER
Token:      sum

Token type: ASSIGNMENT_OPERATOR
Token:      =

Token type: IDENTIFIER
Token:      n

Token type: ASTERISK
Token:      *

Token type: L_PAREN
Token:      (

Token type: IDENTIFIER
Token:      n

Token type: PLUS
Token:      +

Token type: INTEGER
Token:      1

Token type: R_PAREN
Token:      )

Token type: ASTERISK
Token:      *

Token type: L_PAREN
Token:      (

Token type: INTEGER
Token:      2

Token type: ASTERISK
Token:      *

Token type: IDENTIFIER
Token:      n

Token type: PLUS
Token:      +

Token type: INTEGER
Token:      1

Token type: R_PAREN
Token:      )

Token type: DIVIDE
Token:      /

Token type: INTEGER
Token:      6

Token type: SEMICOLON
Token:      ;

Token type: R_BRACE
Token:      }

Token type: IDENTIFIER
Token:      return

Token type: IDENTIFIER
Token:      sum

Token type: SEMICOLON
Token:      ;

Token type: R_BRACE
Token:      }

Token type: IDENTIFIER
Token:      procedure

Token type: IDENTIFIER
Token:      main

Token type: L_PAREN
Token:      (

Token type: IDENTIFIER
Token:      void

Token type: R_PAREN
Token:      )

Token type: L_BRACE
Token:      {

Token type: IDENTIFIER
Token:      int

Token type: IDENTIFIER
Token:      n

Token type: SEMICOLON
Token:      ;

Token type: IDENTIFIER
Token:      int

Token type: IDENTIFIER
Token:      sum

Token type: SEMICOLON
Token:      ;

Token type: IDENTIFIER
Token:      n

Token type: ASSIGNMENT_OPERATOR
Token:      =

Token type: INTEGER
Token:      100

Token type: SEMICOLON
Token:      ;

Token type: IDENTIFIER
Token:      sum

Token type: ASSIGNMENT_OPERATOR
Token:      =

Token type: IDENTIFIER
Token:      sum_of_first_n_squares

Token type: L_PAREN
Token:      (

Token type: IDENTIFIER
Token:      n

Token type: R_PAREN
Token:      )

Token type: SEMICOLON
Token:      ;

Token type: IDENTIFIER
Token:      printf

Token type: L_PAREN
Token:      (

Token type: DOUBLE_QUOTE
Token:      "

Token type: STRING
Token:      sum of the squares of the first %d numbers = %d\n

Token type: DOUBLE_QUOTE
Token:      "

Token type: COMMA
Token:      ,

Token type: IDENTIFIER
Token:      n

Token type: COMMA
Token:      ,

Token type: IDENTIFIER
Token:      sum

Token type: R_PAREN
Token:      )

Token type: SEMICOLON
Token:      ;

Token type: R_BRACE
Token:      }

